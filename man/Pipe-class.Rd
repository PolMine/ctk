% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/PipeDir_class.R
\docType{class}
\name{Pipe-class}
\alias{Pipe}
\alias{Pipe-class}
\title{Pipe for corpus preparation.}
\arguments{
\item{dir}{the pipe directory}

\item{threads}{an integer, the number of threads to use}

\item{metadata}{a named list with xpath expressions that is passed into the
xmlToDT function to extract metadata from XML documents}

\item{sourceDir}{a subdirectory of the pipeDir where files to be processed
are located}

\item{targetDir}{a subdirectory of the pipeDir where processed output is
stored}

\item{cols}{columns that will serve as input to generate p- and s-attributes}

\item{corpus}{name of the CWB corpus to create}
}
\description{
Pipe for corpus preparation.
}
\section{Fields}{

\describe{
\item{\code{dir}}{a pipe directory, different processing stages of the corpus will be kept in
subdirectories of this directory}

\item{\code{time}}{a data.frame with information that different processing stages have consumed}

\item{\code{threads}}{an integer, the number of cores to use}
}}
\section{Methods}{

\describe{
\item{\code{addTreetaggerLemmatization(sourceDir = "tsv", targetDir = "tsv",
  lang = "de", verbose = TRUE)}}{The method will look for a file 'tokenstream.tsv' in the subdirectory of the pipeDir
specified by sourceDir. To use the treetagger, a temporary file is created (tokenstream
only) and annotated. The result is read in again, added to the original table and saved
to an updated file tokenstream.tsv in the targetDir. If sourceDir and targetDir are
identical, the original file is overwritten.}

\item{\code{corenlp(sourceDir = "tsv", targetDir = "ndjson", preclean = TRUE,
  verbose = TRUE)}}{Use Stanford CoreNLP to annotate . }

\item{\code{getFiles(sourceDir, targetDir, ...)}}{Get/copy Files from several directories to the subdirectory of the pipeDir
defined by 'targetDir'.}

\item{\code{initialize(dir, threads = 1L)}}{Initialize a new Pipe object.}

\item{\code{makeMetadataTable(sourceDir = "tsv", targetDir = "tsv", verbose = TRUE)}}{Dissect file basetable.tsv in sourceDir into 'texttable' and 'metadata' as more memory efficient ways
for keeping the data. If targetDir is not NULL, the resulting tables will be
stored as tsv files in the respective subdirectory of the pipe directory.}

\item{\code{makePlaintextTable(sourceDir = "tsv", targetDir = "tsv", verbose = TRUE)}}{Dissect basetable into 'texttable' and 'metadata' as more memory efficient ways
for keeping the data. If targetDir is not NULL, the resulting tables will be
stored as tsv files in the respective subdirectory of the pipe directory.}

\item{\code{ndjsonToDf(sourceDir = "ndjson", targetDir = "tsv")}}{Convert ndjson resulting from Stanford to tsv.}

\item{\code{preparePipeDirs(sourceDir, verbose = TRUE)}}{Create sourceDir, or the subdirectories of the pipeDir defined by the sourceDir
character vector. If sourceDir already exists, files that are already present
are deleted.}

\item{\code{treetagger(sourceDir = "tok", targetDir = "vrt", lang = "de", ...)}}{Annotate all files in sourceDir using treetagger, and save results to targetDir.}

\item{\code{xmlToDT(sourceDir = "xml", targetDir = "tsv", metadata, verbose = TRUE)}}{Extract text and metadata from XML documents, and write resulting 'basetable' as
tsv file to subdirectory specified by targetDir.}
}}

