% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/describeDir_method.R, R/findReplace_method.R, R/init_method.R, R/pipe_class.R, R/pipe_class_methods.R, R/rsync_method.R, R/sAttributeList_method.R, R/tokenizeSentences_method.R, R/treetagger_method.R, R/xslt_method.R
\docType{methods}
\name{describeDir,pipe-method}
\alias{adjustEncoding}
\alias{adjustEncoding,pipe-method}
\alias{describeDir}
\alias{describeDir,pipe-method}
\alias{encode}
\alias{encode,pipe-method}
\alias{findReplace}
\alias{findReplace,pipe-method}
\alias{init,pipe-method}
\alias{pipe}
\alias{rsync}
\alias{rsync,pipe-method}
\alias{sAttributeList}
\alias{sAttributeList,pipe-method}
\alias{saveProject}
\alias{saveProject,pipe-method}
\alias{show,pipe-method}
\alias{summary,pipe-method}
\alias{tokenizeSentences}
\alias{tokenizeSentences,pipe-method}
\alias{treetagger}
\alias{treetagger,pipe-method}
\alias{xslt}
\alias{xslt,pipe-method}
\title{constructor for a pipe object}
\usage{
\S4method{describeDir}{pipe}(object, dirDesc)

\S4method{findReplace}{pipe}(object, sourceDir, targetDir, replacements,
  encoding = "UTF-8", ...)

\S4method{init}{pipe}(object)

pipe(projectDir)

\S4method{show}{pipe}(object)

\S4method{summary}{pipe}(object)

\S4method{rsync}{pipe}(object)

\S4method{sAttributeList}{pipe}(.Object, sourceDir, sample = 100,
  progress = TRUE, verbose = FALSE, ...)

\S4method{tokenizeSentences}{pipe}(.Object, sourceDir = "xml",
  targetDir = "xmlAnno", targetElement = "p", para = FALSE, mc = FALSE,
  verbose = FALSE, progress = TRUE)

\S4method{treetagger}{pipe}(.Object, sourceDir = "xml", targetDir = "vrt",
  py = FALSE, lang = "de", ...)

\S4method{xslt}{pipe}(.Object, sourceDir, targetDir, xslFile, ...)
}
\arguments{
\item{object}{a pipe object}

\item{dirDesc}{a named character vector (names are dirs, values descriptions of the dirs)}

\item{replacements}{a list}

\item{projectDir}{the directory with the project}

\item{.Object}{from time to time}

\item{progress}{whether to use progress bar}

\item{targetElement}{where to finde the text nodes}

\item{para}{logical, whether to annotate paragraphs}

\item{lang}{the language to be used (defaults to 'de')}

\item{xslFile}{file for the xsl transformation}

\item{checkValidity}{whether to validate XML in targetDir}

\item{mkdir}{logical, whether to create the outDir, if it does not yet exist}
}
\value{
a pipe object

the output of the procedure

the verbose output of the tagging script that is called

return of the saxon parser
}
\description{
constructor for a pipe object

Convert XML input files into a tagged corpus
}
\author{
Andreas Blaette
}

