% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeCoreNLP.R
\docType{data}
\name{PipeCoreNLP}
\alias{PipeCoreNLP}
\title{Pipe using Stanford CoreNLP.}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
PipeCoreNLP
}
\arguments{
\item{metadata}{a named list with xpath expressions that is passed into the
xmlToDT function to extract metadata from XML documents}

\item{sourceDir}{a subdirectory of the pipeDir where files to be processed 
are located}

\item{targetDir}{a subdirectory of the pipeDir where processed output is
stored}

\item{cols}{columns that will serve as input to generate p- and s-attributes}

\item{corpus}{name of the CWB corpus to create}
}
\description{
Pipe using Stanford CoreNLP.
}
\section{Fields}{

\describe{
\item{\code{dir}}{a pipe directory, different processing stages of the corpus will be kept in
subdirectories of this directory}

\item{\code{time}}{a data.frame with information that different processing stages have consumed}

\item{\code{threads}}{an integer, the number of cores to use}
}}

\section{Methods}{

\describe{
  \item{\code{$xmlToBasetable(sourceDir = "xml", targetDir = "csv", metadata)}}{Extract text and metadata from XML documents, and keep the resulting
  'basetable' in the respective slot of the Pipe object.}
  \item{\code{$dissectBasetable(targetDir = "csv")}}{Dissect basetable into 'texttable' and 'metadata'
  as more memory efficient ways for keeping the data. If targetDir is not NULL, the resulting tables
   will be stored as csv files in the respective subdirectory of the pipe directory.}
  \item{\code{$corenlp(sourceDir = "csv", targetDir = "ndjson")}}{Use Stanford CoreNLP for annotation.}
  \item{\code{$ndjsonToDf(sourceDir = "ndjson", targetDir = "csv")}}{Convert CoreNLP json output to csv.}
}
}

\keyword{datasets}
