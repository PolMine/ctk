% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Encoder_class.R
\docType{class}
\name{Encoder-class}
\alias{Encoder-class}
\alias{Encoder}
\title{Encode CWB corpus.}
\arguments{
\item{.Object}{input object}

\item{corpus}{the name of the CWB corpus}

\item{pAttributes}{columns of .Object with tokens (such as word/pos/lemma)}

\item{sAttribute}{a single s-attribute}

\item{sAttributes}{columns of .Object that will be encoded as structural attributes}

\item{registry}{path to the corpus registry}

\item{dataDir}{directory where to create directory for indexed corpus files}

\item{verbose}{logical, whether to be verbose}
}
\description{
Encode CWB corpus.
}
\section{Fields}{

\describe{
\item{\code{corpus}}{name of the CWB corpus}

\item{\code{registryFile}}{filename of the registry file}

\item{\code{registryDir}}{corpus registry, the directory where registry files are stored}

\item{\code{dataDir}}{directory with indexed corpus files}

\item{\code{encoding}}{encoding of the corpus}
}}

\section{Methods}{

\describe{
\item{\code{addCorpusPositionsToStructuralAttributesTable(verbose = TRUE)}}{Add columns cpos_left and cpos_right to table with structural attributes. A
precondition is that a column 'id' is present in tables 'pAttrDT' and 'sAttrDT'.}

\item{\code{cwbMake(verbose = TRUE)}}{Run cwb-make.}

\item{\code{encode(pAttributes = "word", sAttributes = NULL, verbose = TRUE)}}{Encode CWB corpus from tables in fields sAttrDT and pAttrDT.}

\item{\code{encodePositionalAttribute(pAttribute, verbose = TRUE)}}{Add positional attribute to a corpus that already exists.}

\item{\code{encodeStructuralAttribute(sAttribute, verbose = TRUE)}}{Add a structural attribute to a corpus from a data.table with three columns:
The left corpus position, the right corpus position and the value of a s-attribute
that will be encoded.}

\item{\code{encodeTokenStream(verbose = TRUE)}}{Create a new CWB corpus from a input vector.}

\item{\code{initialize(corpus, registryDir = Sys.getenv("CORPUS_REGISTRY"),
  dataDir = NULL)}}{Initialize an encoder. If the corpus does not yet exist and dataDir is not provided explicitly,
the data directory will be guessed and suggested. If the corpus is already present, the
data directory will be derived from the registry file.}
}}

\examples{
library(tm)
reut21578 <- system.file("texts", "crude", package = "tm")
reuters.tm <- VCorpus(DirSource(reut21578), list(reader = readReut21578XMLasPlain))

library(tidytext)
reuters.tibble <- tidy(reuters.tm)
reuters.tibble[["topics_cat"]] <- sapply(
  reuters.tibble[["topics_cat"]],
  function(x) paste(reuters.tibble[["topics_cat"]], collapse = "|")
)
reuters.tibble[["places"]] <- sapply(
  reuters.tibble[["places"]],
  function(x) paste(x, collapse = "|")
)
reuters.tidy <- unnest_tokens(
  reuters.tibble, output = "word", input = "text", to_lower = FALSE
)

Enc <- Encoder$new(corpus = "reuters")
Enc$pAttrDT <- as.data.table(reuters.tidy[, c("id", "word")])
Enc$sAttrDT <- as.data.table(reuters.tibble[,c("id", "topics_cat", "places", "language")])

Enc$encode(pAttributes = "word", sAttributes = c("id", "topics_cat", "places", "language"))
}
